{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/src/data/channels.ts"],"sourcesContent":["export const channels = [\n    { id: 1, name: \"Í∞úÎ∞úÏûê Ï±ÑÎÑê\" },\n    { id: 2, name: \"ÎîîÏûêÏù∏ Ï±ÑÎÑê\" },\n    { id: 3, name: \"ÎßàÏºÄÌåÖ Ï±ÑÎÑê\" },\n  ];"],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB;QAAE,IAAI;QAAG,MAAM;IAAS;IACxB;QAAE,IAAI;QAAG,MAAM;IAAS;IACxB;QAAE,IAAI;QAAG,MAAM;IAAS;CACzB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/utils/rewardUser.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport const rewardUser = async (to: string) => {\n  try {\n    if (!window.ethereum) {\n      alert(\"Metamask not installed\");\n      return;\n    }\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n\n    // ÏßÄÍ∞ë Ïó∞Í≤∞ Î∞è signer ÏÑ§Ï†ï\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const sender = accounts[0];\n    const signer = await provider.getSigner(sender);\n\n    // Î≥¥ÏÉÅ Í∏àÏï° (Ïòà: 0.01 ETH)\n    const rewardAmount = ethers.parseEther(\"0.01\"); // 0.01 ETH\n\n    // Î≥¥ÏÉÅÏûê ETH ÏûîÏï° ÌôïÏù∏\n    const ethBalance = await provider.getBalance(sender);\n    console.log(\"Î≥¥ÏÉÅÏûê:\", sender);\n    console.log(\"Î≥¥ÏÉÅ ÎåÄÏÉÅ:\", to);\n    console.log(\"Î≥¥ÏÉÅÏûê ETH ÏûîÏï°:\", ethers.formatEther(ethBalance));\n\n    if (ethBalance < rewardAmount) {\n      alert(\"Î≥¥ÏÉÅÏûê ETH ÏûîÏï° Î∂ÄÏ°±\");\n      return;\n    }\n\n    // ETH Ï†ÑÏÜ° Ìä∏ÎûúÏû≠ÏÖò\n    const tx = await signer.sendTransaction({\n      to,\n      value: rewardAmount,\n    });\n    await tx.wait();\n    await fetch(\"http://localhost:4000/api/reward-log\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        from: sender,\n        to,\n        amount: \"10 RTK\",\n        channel: \"ÎîîÏûêÏù∏ Ï±ÑÎÑê\", // ÎòêÎäî ÌååÎùºÎØ∏ÌÑ∞Î°ú Î∞õÍ∏∞\n        timestamp: new Date().toISOString(),\n      }),\n    });\n\n    alert(\"üéâ ETH Î≥¥ÏÉÅ ÏßÄÍ∏â ÏôÑÎ£å!\");\n  } catch (err: any) {\n    console.error(\"Î≥¥ÏÉÅ ÏßÄÍ∏â Ïã§Ìå®\", err);\n    alert(\"Î≥¥ÏÉÅ ÏßÄÍ∏â Ïã§Ìå®: \" + (err?.reason || err?.message || \"Unknown error\"));\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,OAAO;IAC/B,IAAI;QACF,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,MAAM;YACN;QACF;QAEA,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;QAE3D,oBAAoB;QACpB,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;QAC9D,MAAM,SAAS,QAAQ,CAAC,EAAE;QAC1B,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;QAExC,sBAAsB;QACtB,MAAM,eAAe,gLAAA,CAAA,SAAM,CAAC,UAAU,CAAC,SAAS,WAAW;QAE3D,gBAAgB;QAChB,MAAM,aAAa,MAAM,SAAS,UAAU,CAAC;QAC7C,QAAQ,GAAG,CAAC,QAAQ;QACpB,QAAQ,GAAG,CAAC,UAAU;QACtB,QAAQ,GAAG,CAAC,eAAe,gLAAA,CAAA,SAAM,CAAC,WAAW,CAAC;QAE9C,IAAI,aAAa,cAAc;YAC7B,MAAM;YACN;QACF;QAEA,cAAc;QACd,MAAM,KAAK,MAAM,OAAO,eAAe,CAAC;YACtC;YACA,OAAO;QACT;QACA,MAAM,GAAG,IAAI;QACb,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,MAAM;gBACN;gBACA,QAAQ;gBACR,SAAS;gBACT,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,MAAM;IACR,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,YAAY;QAC1B,MAAM,eAAe,CAAC,KAAK,UAAU,KAAK,WAAW,eAAe;IACtE;AACF","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { channels } from \"@/src/data/channels\";\nimport { rewardUser } from \"@/utils/rewardUser\";\n// import { useTranslation } from \"react-i18next\";\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\nexport default function Home() {\n  const [account, setAccount] = useState<string | null>(null);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n\n  // const { t, i18n } = useTranslation();\n\n  // const toggleLang = () => {\n  //   i18n.changeLanguage(i18n.language === \"ko\" ? \"en\" : \"ko\");\n  // };\n\n  return (\n    <main className=\"p-4\">\n      <h1 className=\"text-xl mb-4\">Web3 ÌÜ†ÌÅ∞ Î≥¥ÏÉÅ ÏãúÏä§ÌÖú</h1>\n      {account ? (\n        <>\n        <p>ÏßÄÍ∞ë Ïó∞Í≤∞Îê®: {account}</p>\n\n        <h2 className=\"mt-4 mb-2 font-bold\">Ï±ÑÎÑê Î™©Î°ù</h2>\n        <ul className=\"space-y-2\">\n          {channels.map((channel) => (\n            <li key={channel.id} className=\"border p-2 rounded\">\n              {channel.name}\n              <button\n                className=\"ml-4 border px-2 py-1\"\n                onClick={() => rewardUser(account)}\n              >\n                Î≥¥ÏÉÅ ÏßÄÍ∏â\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n      ) : (\n        <button onClick={connectWallet}>Metamask Ïó∞Í≤∞</button>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAce,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,gBAAgB;QACpB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,IAAI;gBACF,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;gBAC3D,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;gBAC9D,WAAW,QAAQ,CAAC,EAAE;YACxB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC;YAChB;QACF,OAAO;YACL,MAAM;QACR;IACF;IAEA,wCAAwC;IAExC,6BAA6B;IAC7B,+DAA+D;IAC/D,KAAK;IAEL,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAe;;;;;;YAC5B,wBACC;;kCACA,8OAAC;;4BAAE;4BAAS;;;;;;;kCAEZ,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAG,WAAU;kCACX,uHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,8OAAC;gCAAoB,WAAU;;oCAC5B,QAAQ,IAAI;kDACb,8OAAC;wCACC,WAAU;wCACV,SAAS,IAAM,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE;kDAC3B;;;;;;;+BALM,QAAQ,EAAE;;;;;;;;;;;6CAavB,8OAAC;gBAAO,SAAS;0BAAe;;;;;;;;;;;;AAIxC","debugId":null}}]
}