{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/web3-frontend/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\nexport default function Home() {\n  const [account, setAccount] = useState<string | null>(null);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n\n  return (\n    <main className=\"p-4\">\n      <h1 className=\"text-xl mb-4\">Web3 토큰 보상 시스템</h1>\n      {account ? (\n        <p>지갑 연결됨: {account}</p>\n      ) : (\n        <button onClick={connectWallet}>Metamask 연결</button>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,gBAAgB;QACpB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,IAAI;gBACF,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;gBAC3D,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;gBAC9D,WAAW,QAAQ,CAAC,EAAE;YACxB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC;YAChB;QACF,OAAO;YACL,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAe;;;;;;YAC5B,wBACC,8OAAC;;oBAAE;oBAAS;;;;;;qCAEZ,8OAAC;gBAAO,SAAS;0BAAe;;;;;;;;;;;;AAIxC","debugId":null}}]
}