{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/src/data/channels.ts"],"sourcesContent":["export const channels = [\n    { id: 1, name: \"개발자 채널\" },\n    { id: 2, name: \"디자인 채널\" },\n    { id: 3, name: \"마케팅 채널\" },\n  ];"],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB;QAAE,IAAI;QAAG,MAAM;IAAS;IACxB;QAAE,IAAI;QAAG,MAAM;IAAS;IACxB;QAAE,IAAI;QAAG,MAAM;IAAS;CACzB","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/utils/rewardEthUser.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport const rewardEthUser = async (to: string) => {\n  try {\n    if (!window.ethereum) {\n      alert(\"Metamask not installed\");\n      return;\n    }\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n\n    // 지갑 연결 및 signer 설정\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const sender = accounts[0];\n    const signer = await provider.getSigner(sender);\n\n    // 보상 금액 (예: 0.01 ETH)\n    const rewardAmount = ethers.parseEther(\"0.01\"); // 0.01 ETH\n\n    // 보상자 ETH 잔액 확인\n    const ethBalance = await provider.getBalance(sender);\n    console.log(\"보상자:\", sender);\n    console.log(\"보상 대상:\", to);\n    console.log(\"보상자 ETH 잔액:\", ethers.formatEther(ethBalance));\n\n    if (ethBalance < rewardAmount) {\n      alert(\"보상자 ETH 잔액 부족\");\n      return;\n    }\n\n    // ETH 전송 트랜잭션\n    const tx = await signer.sendTransaction({\n      to,\n      value: rewardAmount,\n    });\n    await tx.wait();\n    await fetch(\"http://localhost:4000/api/reward-log\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        from: sender,\n        to,\n        amount: \"10 RTK\",\n        channel: \"디자인 채널\", // 또는 파라미터로 받기\n        timestamp: new Date().toISOString(),\n      }),\n    });\n\n    alert(\"🎉 ETH 보상 지급 완료!\");\n  } catch (err: any) {\n    console.error(\"보상 지급 실패\", err);\n    alert(\"보상 지급 실패: \" + (err?.reason || err?.message || \"Unknown error\"));\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,MAAM;YACN;QACF;QAEA,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;QAE3D,oBAAoB;QACpB,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;QAC9D,MAAM,SAAS,QAAQ,CAAC,EAAE;QAC1B,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;QAExC,sBAAsB;QACtB,MAAM,eAAe,gLAAA,CAAA,SAAM,CAAC,UAAU,CAAC,SAAS,WAAW;QAE3D,gBAAgB;QAChB,MAAM,aAAa,MAAM,SAAS,UAAU,CAAC;QAC7C,QAAQ,GAAG,CAAC,QAAQ;QACpB,QAAQ,GAAG,CAAC,UAAU;QACtB,QAAQ,GAAG,CAAC,eAAe,gLAAA,CAAA,SAAM,CAAC,WAAW,CAAC;QAE9C,IAAI,aAAa,cAAc;YAC7B,MAAM;YACN;QACF;QAEA,cAAc;QACd,MAAM,KAAK,MAAM,OAAO,eAAe,CAAC;YACtC;YACA,OAAO;QACT;QACA,MAAM,GAAG,IAAI;QACb,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,MAAM;gBACN;gBACA,QAAQ;gBACR,SAAS;gBACT,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,MAAM;IACR,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,YAAY;QAC1B,MAAM,eAAe,CAAC,KAAK,UAAU,KAAK,WAAW,eAAe;IACtE;AACF","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { channels } from \"@/src/data/channels\";\nimport { rewardEthUser } from \"@/utils/rewardEthUser\";\nimport { useRouter } from \"next/navigation\";\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\nexport default function Home() {\n  const [account, setAccount] = useState<string | null>(null);\n  const router = useRouter();\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n\n  return (\n    <main className=\"p-4\">\n      <h1 className=\"text-xl mb-4\">Web3 토큰 보상 시스템</h1>\n      {account ? (\n        <>\n          <p>지갑 연결됨: {account}</p>\n\n          <h2 className=\"mt-4 mb-2 font-bold\">채널 목록</h2>\n          <ul className=\"space-y-2 mb-4\">\n            {channels.map((channel) => (\n              <li key={channel.id} className=\"border p-2 rounded\">\n                {channel.name}\n                <button\n                  className=\"ml-4 border px-2 py-1\"\n                  onClick={() => rewardEthUser(account)}\n                >\n                  보상 지급\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {/* ✅ 하단 네비게이션 버튼 */}\n          <div className=\"flex gap-4 mt-6\">\n            <button\n              onClick={() => router.push(\"/translation\")}\n              className=\"border px-4 py-2 rounded\"\n            >\n              🌐 Translation\n            </button>\n            <button\n              onClick={() => router.push(\"/admin\")}\n              className=\"border px-4 py-2 rounded\"\n            >\n              🛠 관리자 페이지\n            </button>\n            <button\n              onClick={() => router.push(\"/survey\")}\n              className=\"border px-4 py-2 rounded\"\n            >\n              📝 설문 참여\n            </button>\n          </div>\n        </>\n      ) : (\n        <button onClick={connectWallet}>Metamask 연결</button>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAce,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,gBAAgB;QACpB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,IAAI;gBACF,MAAM,WAAW,IAAI,gLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;gBAC3D,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;gBAC9D,WAAW,QAAQ,CAAC,EAAE;YACxB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC;YAChB;QACF,OAAO;YACL,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAe;;;;;;YAC5B,wBACC;;kCACE,8OAAC;;4BAAE;4BAAS;;;;;;;kCAEZ,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAG,WAAU;kCACX,uHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,8OAAC;gCAAoB,WAAU;;oCAC5B,QAAQ,IAAI;kDACb,8OAAC;wCACC,WAAU;wCACV,SAAS,IAAM,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EAAE;kDAC9B;;;;;;;+BALM,QAAQ,EAAE;;;;;;;;;;kCAavB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACX;;;;;;;;;;;;;6CAML,8OAAC;gBAAO,SAAS;0BAAe;;;;;;;;;;;;AAIxC","debugId":null}}]
}