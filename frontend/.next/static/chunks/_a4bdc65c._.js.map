{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/src/data/surveys.ts"],"sourcesContent":["export const surveys = [\n    {\n      id: 1,\n      question: \"Î∏îÎ°ùÏ≤¥Ïù∏ÏùÑ Ï¢ãÏïÑÌïòÎÇòÏöî?\",\n      options: [\"Ïûò Î™®Î¶Ñ\", \"Îì§Ïñ¥Îäî Î¥§Ïùå\", \"Ï°∞Í∏à ÏïåÏùå\", \"Ï¢ãÏïÑÌï®\"],\n    },\n    {\n      id: 2,\n      question: \"Í∞ÄÏû• ÎßéÏù¥ ÏÇ¨Ïö©ÌïòÎäî ÏßÄÍ∞ëÏùÄ?\",\n      options: [\"Metamask\", \"ÏÉ§ÎÑ¨\", \"Î¨∏Î∞©Íµ¨ ÏßÄÍ∞ë\", \"Í∏∞ÌÉÄ\"],\n    },\n  ];"],"names":[],"mappings":";;;AAAO,MAAM,UAAU;IACnB;QACE,IAAI;QACJ,UAAU;QACV,SAAS;YAAC;YAAQ;YAAU;YAAS;SAAM;IAC7C;IACA;QACE,IAAI;QACJ,UAAU;QACV,SAAS;YAAC;YAAY;YAAM;YAAU;SAAK;IAC7C;CACD","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/utils/rewardEthUser.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport const rewardEthUser = async (to: string) => {\n  try {\n    if (!window.ethereum) {\n      alert(\"Metamask not installed\");\n      return;\n    }\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n\n    // ÏßÄÍ∞ë Ïó∞Í≤∞ Î∞è signer ÏÑ§Ï†ï\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const sender = accounts[0];\n    const signer = await provider.getSigner(sender);\n\n    // Î≥¥ÏÉÅ Í∏àÏï° (Ïòà: 0.01 ETH)\n    const rewardAmount = ethers.parseEther(\"0.01\"); // 0.01 ETH\n\n    // Î≥¥ÏÉÅÏûê ETH ÏûîÏï° ÌôïÏù∏\n    const ethBalance = await provider.getBalance(sender);\n    console.log(\"Î≥¥ÏÉÅÏûê:\", sender);\n    console.log(\"Î≥¥ÏÉÅ ÎåÄÏÉÅ:\", to);\n    console.log(\"Î≥¥ÏÉÅÏûê ETH ÏûîÏï°:\", ethers.formatEther(ethBalance));\n\n    if (ethBalance < rewardAmount) {\n      alert(\"Î≥¥ÏÉÅÏûê ETH ÏûîÏï° Î∂ÄÏ°±\");\n      return;\n    }\n\n    // ETH Ï†ÑÏÜ° Ìä∏ÎûúÏû≠ÏÖò\n    const tx = await signer.sendTransaction({\n      to,\n      value: rewardAmount,\n    });\n    await tx.wait();\n    await fetch(\"http://localhost:4000/api/reward-log\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        from: sender,\n        to,\n        amount: \"10 RTK\",\n        channel: \"ÎîîÏûêÏù∏ Ï±ÑÎÑê\", // ÎòêÎäî ÌååÎùºÎØ∏ÌÑ∞Î°ú Î∞õÍ∏∞\n        timestamp: new Date().toISOString(),\n      }),\n    });\n\n    alert(\"üéâ ETH Î≥¥ÏÉÅ ÏßÄÍ∏â ÏôÑÎ£å!\");\n  } catch (err: any) {\n    console.error(\"Î≥¥ÏÉÅ ÏßÄÍ∏â Ïã§Ìå®\", err);\n    alert(\"Î≥¥ÏÉÅ ÏßÄÍ∏â Ïã§Ìå®: \" + (err?.reason || err?.message || \"Unknown error\"));\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,MAAM;YACN;QACF;QAEA,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;QAE3D,oBAAoB;QACpB,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;QAC9D,MAAM,SAAS,QAAQ,CAAC,EAAE;QAC1B,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;QAExC,sBAAsB;QACtB,MAAM,eAAe,mLAAA,CAAA,SAAM,CAAC,UAAU,CAAC,SAAS,WAAW;QAE3D,gBAAgB;QAChB,MAAM,aAAa,MAAM,SAAS,UAAU,CAAC;QAC7C,QAAQ,GAAG,CAAC,QAAQ;QACpB,QAAQ,GAAG,CAAC,UAAU;QACtB,QAAQ,GAAG,CAAC,eAAe,mLAAA,CAAA,SAAM,CAAC,WAAW,CAAC;QAE9C,IAAI,aAAa,cAAc;YAC7B,MAAM;YACN;QACF;QAEA,cAAc;QACd,MAAM,KAAK,MAAM,OAAO,eAAe,CAAC;YACtC;YACA,OAAO;QACT;QACA,MAAM,GAAG,IAAI;QACb,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,MAAM;gBACN;gBACA,QAAQ;gBACR,SAAS;gBACT,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,MAAM;IACR,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,YAAY;QAC1B,MAAM,eAAe,CAAC,KAAK,UAAU,KAAK,WAAW,eAAe;IACtE;AACF","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/tderk/dev_space/token-reward-system/frontend/app/survey/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { surveys } from \"@/src/data/surveys\";\nimport { rewardEthUser } from \"@/utils/rewardEthUser\";\nimport { ethers } from \"ethers\";\n\nexport default function SurveyPage() {\n  const [selectedSurvey, setSelectedSurvey] = useState<number | null>(null);\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedOption || selectedSurvey === null || !account) return;\n\n    // ‚úÖ ÏÑ§Î¨∏ ÏùëÎãµ Ï†ÄÏû• + Î≥¥ÏÉÅ ÏßÄÍ∏â\n    await fetch(\"http://localhost:4000/api/reward-log\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        from: \"Survey System\",\n        to: account,\n        amount: \"10 RTK\",\n        channel: `ÏÑ§Î¨∏ ${selectedSurvey}`,\n        timestamp: new Date().toISOString(),\n      }),\n    });\n\n    await rewardEthUser(account);\n\n    alert(\"ÏÑ§Î¨∏ ÏùëÎãµ ÏôÑÎ£å Î∞è Î≥¥ÏÉÅ ÏßÄÍ∏â!\");\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">ÏÑ§Î¨∏ Ï∞∏Ïó¨</h1>\n      {!account ? (\n        <button onClick={connectWallet}>ü¶ä Metamask Ïó∞Í≤∞</button>\n      ) : (\n        <>\n          <p className=\"mb-2\">ÏßÄÍ∞ë Ï£ºÏÜå: {account}</p>\n          {surveys.map((s) => (\n            <div key={s.id} className=\"mb-4 border p-4 rounded\">\n              <h2 className=\"font-semibold mb-2\">{s.question}</h2>\n              {s.options.map((opt) => (\n                <label key={opt} className=\"block\">\n                  <input\n                    type=\"radio\"\n                    name={`survey-${s.id}`}\n                    value={opt}\n                    onChange={() => {\n                      setSelectedSurvey(s.id);\n                      setSelectedOption(opt);\n                    }}\n                  />{\" \"}\n                  {opt}\n                </label>\n              ))}\n            </div>\n          ))}\n          <button\n            onClick={handleSubmit}\n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded\"\n          >\n            Ï†úÏ∂úÌïòÍ≥† Î≥¥ÏÉÅÎ∞õÍ∏∞\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,gBAAgB;QACpB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;YAC3D,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;YAC9D,WAAW,QAAQ,CAAC,EAAE;QACxB;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,kBAAkB,mBAAmB,QAAQ,CAAC,SAAS;QAE5D,qBAAqB;QACrB,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,MAAM;gBACN,IAAI;gBACJ,QAAQ;gBACR,SAAS,CAAC,GAAG,EAAE,gBAAgB;gBAC/B,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE;QAEpB,MAAM;IACR;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,CAAC,wBACA,6LAAC;gBAAO,SAAS;0BAAe;;;;;qCAEhC;;kCACE,6LAAC;wBAAE,WAAU;;4BAAO;4BAAQ;;;;;;;oBAC3B,yHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,CAAC,kBACZ,6LAAC;4BAAe,WAAU;;8CACxB,6LAAC;oCAAG,WAAU;8CAAsB,EAAE,QAAQ;;;;;;gCAC7C,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,oBACd,6LAAC;wCAAgB,WAAU;;0DACzB,6LAAC;gDACC,MAAK;gDACL,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE;gDACtB,OAAO;gDACP,UAAU;oDACR,kBAAkB,EAAE,EAAE;oDACtB,kBAAkB;gDACpB;;;;;;4CACC;4CACF;;uCAVS;;;;;;2BAHN,EAAE,EAAE;;;;;kCAkBhB,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;AAOX;GAvEwB;KAAA","debugId":null}}]
}